> cat("BASIC DATA METRICS")BASIC DATA METRICS> install.packages("tidyverse")trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.3/tidyverse_2.0.0.tgz'Content type 'application/x-gzip' length 428470 bytes (418 KB)==================================================downloaded 418 KBThe downloaded binary packages are in	/var/folders/f7/k7qp4xdj04j2sywnrhst2bj00000gn/T//RtmpMKA91e/downloaded_packages> library(tidyverse)Error: package or namespace load failed for ‘tidyverse’: .onAttach failed in attachNamespace() for 'tidyverse', details:  call: NULL  error: package or namespace load failed for ‘stringr’ in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]): there is no package called ‘stringi’> inputData <- read.csv("chicago_taxi.csv")> mean(inputData$tips)[1] 1.984829> median(inputData$tips)[1] 0> summary(inputData$tips)   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.   0.000   0.000   0.000   1.985   2.600  58.100 > summary(inputData$tips)   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.   0.000   0.000   0.000   1.985   2.600  58.100 > var(inputData$tips)[1] 9.846783> var(inputData$seconds)[1] 1868992> var(inputData$miles)[1] 36.38106> var(inputData$total)[1] 338.1679> var(inputData$speed)[1] 91.29104> install.packages("dplyr")Error in install.packages : Updating loaded packagesRestarting R session...> install.packages("dplyr")trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.3/dplyr_1.1.4.tgz'Content type 'application/x-gzip' length 1595883 bytes (1.5 MB)==================================================downloaded 1.5 MBThe downloaded binary packages are in	/var/folders/f7/k7qp4xdj04j2sywnrhst2bj00000gn/T//RtmpQsGrji/downloaded_packages> library(magrittr)> library(dplyr)Attaching package: ‘dplyr’The following objects are masked from ‘package:stats’:    filter, lagThe following objects are masked from ‘package:base’:    intersect, setdiff, setequal, union> inputData %>%+   group_by(payment_type) %>%+   summarise(freq = n()) %>%+   arrange(freq)# A tibble: 2 × 2  payment_type  freq  <chr>        <int>1 Cash          63752 Credit        6707> cat("FITTING LINEAR REGRESSION")FITTING LINEAR REGRESSION> install.packages("e1071")trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.3/e1071_1.7-14.tgz'Content type 'application/x-gzip' length 662464 bytes (646 KB)==================================================downloaded 646 KBThe downloaded binary packages are in	/var/folders/f7/k7qp4xdj04j2sywnrhst2bj00000gn/T//RtmpQsGrji/downloaded_packages> data <- read.csv("chicago_taxi.csv")> credit_data <- data[data$payment_type == "Credit", ]> variables_to_normalize <- credit_data[, c("seconds", "miles", "speed", "total", "tips")]> # Normalize the variables> normalized_credit_data <- as.data.frame(scale(variables_to_normalize))> linear_model <- lm(tips ~ seconds + miles + speed + total, data=normalized_credit_data)> summary(linear_model)Call:lm(formula = tips ~ seconds + miles + speed + total, data = normalized_credit_data)Residuals:    Min      1Q  Median      3Q     Max -5.6378 -0.1243  0.0211  0.1917 13.0610 Coefficients:              Estimate Std. Error t value Pr(>|t|)    (Intercept)  1.658e-15  6.041e-03   0.000 1.000000    seconds     -5.975e-02  1.596e-02  -3.744 0.000182 ***miles       -1.290e-01  2.278e-02  -5.662 1.56e-08 ***speed       -3.178e-02  1.409e-02  -2.255 0.024155 *  total        1.054e+00  1.643e-02  64.148  < 2e-16 ***---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.4947 on 6702 degrees of freedomMultiple R-squared:  0.7554,	Adjusted R-squared:  0.7553 F-statistic:  5174 on 4 and 6702 DF,  p-value: < 2.2e-16> summary(data) # For median and mean     date             daytype             seconds            miles             tips            total        payment_type       Length:13082       Length:13082       Min.   :   61.0   Min.   : 0.010   Min.   : 0.000   Min.   :  0.01   Length:13082       Class :character   Class :character   1st Qu.:  399.0   1st Qu.: 0.900   1st Qu.: 0.000   1st Qu.:  7.75   Class :character   Mode  :character   Mode  :character   Median :  616.0   Median : 1.540   Median : 0.000   Median : 10.50   Mode  :character                                         Mean   :  952.4   Mean   : 4.318   Mean   : 1.985   Mean   : 18.50                                                            3rd Qu.: 1140.0   3rd Qu.: 4.290   3rd Qu.: 2.600   3rd Qu.: 19.25                                                            Max.   :72141.0   Max.   :89.370   Max.   :58.100   Max.   :236.25                          speed          Min.   :  0.0026   1st Qu.:  7.6667   Median : 10.5366   Mean   : 13.5720   3rd Qu.: 17.0257   Max.   :162.0000  > # Now without the total> linear_model <- lm(tips ~ seconds + miles + speed, data=normalized_credit_data)> summary(linear_model)Call:lm(formula = tips ~ seconds + miles + speed, data = normalized_credit_data)Residuals:    Min      1Q  Median      3Q     Max -4.2178 -0.2148 -0.0180  0.1978 15.7436 Coefficients:              Estimate Std. Error t value Pr(>|t|)    (Intercept) -1.867e-16  7.674e-03   0.000        1    seconds      4.081e-01  1.803e-02  22.633  < 2e-16 ***miles        3.344e-01  2.745e-02  12.184  < 2e-16 ***speed        1.107e-01  1.768e-02   6.263 4.01e-10 ***---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.6285 on 6703 degrees of freedomMultiple R-squared:  0.6052,	Adjusted R-squared:  0.605 F-statistic:  3425 on 3 and 6703 DF,  p-value: < 2.2e-16> # Filter out non-numeric columns> numeric_data <- data[, sapply(data, is.numeric)]> # Calculate variance for numeric columns> sapply(numeric_data, var)     seconds        miles         tips        total        speed 1.868992e+06 3.638106e+01 9.846783e+00 3.381679e+02 9.129104e+01 > # Calculate variance for numeric columns while ignoring NA values> sapply(numeric_data, function(x) var(x, na.rm = TRUE))     seconds        miles         tips        total        speed 1.868992e+06 3.638106e+01 9.846783e+00 3.381679e+02 9.129104e+01 > library(e1071)> sapply(numeric_data, skewness) # For skewness  seconds     miles      tips     total     speed 25.433584  2.332723  2.631205  2.276790  1.893433 > aggregate(tips ~ daytype, data=data, mean)  daytype     tips1 weekday 2.0759062 weekend 1.754494> cat("BASIC CORRELATION MATRIX")BASIC CORRELATION MATRIX> cor_matrix <- cor(data[c("seconds", "miles", "speed", "tips")])> print(cor_matrix)          seconds     miles     speed      tipsseconds 1.0000000 0.5126039 0.2005247 0.2956083miles   0.5126039 1.0000000 0.7681730 0.5428041speed   0.2005247 0.7681730 1.0000000 0.3858022tips    0.2956083 0.5428041 0.3858022 1.0000000> cat("REDUCED LINEAR REGRESSION MODEL")REDUCED LINEAR REGRESSION MODEL> reduced_linear_model <- lm(tips ~ seconds + miles + speed, data=data)> summary(reduced_linear_model)Call:lm(formula = tips ~ seconds + miles + speed, data = data)Residuals:    Min      1Q  Median      3Q     Max -22.327  -1.189  -0.868   1.058  56.165 Coefficients:              Estimate Std. Error t value Pr(>|t|)    (Intercept)  9.635e-01  4.720e-02  20.413  < 2e-16 ***seconds      9.494e-06  2.093e-05   0.453     0.65    miles        3.109e-01  7.261e-03  42.817  < 2e-16 ***speed       -2.433e-02  4.017e-03  -6.056 1.43e-09 ***---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 2.631 on 13078 degrees of freedomMultiple R-squared:  0.297,	Adjusted R-squared:  0.2969 F-statistic:  1842 on 3 and 13078 DF,  p-value: < 2.2e-16> summary(data) # For median and mean     date             daytype             seconds            miles             tips            total        payment_type       Length:13082       Length:13082       Min.   :   61.0   Min.   : 0.010   Min.   : 0.000   Min.   :  0.01   Length:13082       Class :character   Class :character   1st Qu.:  399.0   1st Qu.: 0.900   1st Qu.: 0.000   1st Qu.:  7.75   Class :character   Mode  :character   Mode  :character   Median :  616.0   Median : 1.540   Median : 0.000   Median : 10.50   Mode  :character                                         Mean   :  952.4   Mean   : 4.318   Mean   : 1.985   Mean   : 18.50                                                            3rd Qu.: 1140.0   3rd Qu.: 4.290   3rd Qu.: 2.600   3rd Qu.: 19.25                                                            Max.   :72141.0   Max.   :89.370   Max.   :58.100   Max.   :236.25                          speed          Min.   :  0.0026   1st Qu.:  7.6667   Median : 10.5366   Mean   : 13.5720   3rd Qu.: 17.0257   Max.   :162.0000  > cat("GENERATING DATA VISUALIZATIONS")GENERATING DATA VISUALIZATIONS> # Visualizing miles variable> filtered_data <- data[data$miles < 25, ]> hist(filtered_data$miles, breaks=25)> # Visualizing speed variable> filtered_data <- data[data$speed < 60, ]> hist(filtered_data$speed, breaks=25)> # Visualizing tips variable> filtered_data <- data[data$tips < 15, ]> hist(filtered_data$tips, breaks=25)> plot(data$speed, data$tips, main = "Scatter Plot of Speed vs Tips", +      xlab = "Speed", ylab = "Tips", pch = 16, col = "blue",+      xlim = c(0, 75), ylim = c(0, 20))> cat("CASH VS CREDIT ANALYSIS")CASH VS CREDIT ANALYSIS> # Read Excel file> inputData <- data> # Explore the data> glimpse(inputData)Rows: 13,082Columns: 8$ date         <chr> "9/9/19", "8/29/19", "2/22/19", "5/30/19", "7/21/19", "11/30/19", "10/15/19", "2/2/19", "8/17/19", "7/26/19", "8/3…$ daytype      <chr> "weekday", "weekday", "weekend", "weekday", "weekday", "weekend", "weekday", "weekend", "weekend", "weekend", "wee…$ seconds      <int> 601, 346, 931, 252, 393, 1320, 246, 680, 686, 240, 2820, 652, 443, 602, 480, 600, 480, 480, 675, 240, 1680, 480, 1…$ miles        <dbl> 1.56, 0.73, 3.29, 0.70, 1.12, 1.10, 0.50, 2.02, 3.00, 0.60, 18.20, 1.67, 0.50, 1.20, 1.50, 0.10, 1.90, 3.20, 1.54,…$ tips         <dbl> 2.00, 2.00, 0.00, 0.00, 0.00, 1.00, 0.00, 2.00, 0.00, 0.00, 0.00, 3.00, 0.00, 4.00, 0.00, 0.00, 3.00, 0.00, 0.00, …$ total        <dbl> 10.25, 8.25, 13.75, 5.25, 7.25, 46.25, 4.75, 11.75, 13.50, 5.00, 46.75, 12.00, 7.75, 12.00, 7.50, 10.25, 11.75, 10…$ payment_type <chr> "Credit", "Credit", "Cash", "Cash", "Cash", "Credit", "Cash", "Credit", "Cash", "Cash", "Cash", "Credit", "Cash", …$ speed        <dbl> 9.344426, 7.595376, 12.721805, 10.000000, 10.259542, 3.000000, 7.317073, 10.694118, 15.743440, 9.000000, 23.234043…> if (!requireNamespace("tidyverse", quietly = TRUE)) {+   install.packages("tidyverse")+ }> # Load necessary libraries> library(tidyverse)Error: package or namespace load failed for ‘tidyverse’: .onAttach failed in attachNamespace() for 'tidyverse', details:  call: NULL  error: package or namespace load failed for ‘stringr’ in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]): there is no package called ‘stringi’> library(dplyr)> # Analyze tips based on payment_type> summary_stats <- inputData %>%+   group_by(payment_type) %>%+   summarize(+     mean_tip = mean(tips),+     median_tip = median(tips),+     max_tip = max(tips),+     min_tip = min(tips)+   )> # Display the summary statistics> print(summary_stats)# A tibble: 2 × 5  payment_type mean_tip median_tip max_tip min_tip  <chr>           <dbl>      <dbl>   <dbl>   <dbl>1 Cash          0.00253        0      8.65       02 Credit        3.87           2.5   58.1        0> cat("SPEED TO TIPS ANALYSIS")SPEED TO TIPS ANALYSIS> # Create speed intervals, e.g., 0-10, 10-20, ..., 70-80> speed_intervals <- seq(0, 80, by = 5)> # Use tapply to calculate average tip for each speed interval> average_tips <- tapply(data$tips, cut(data$speed, breaks = speed_intervals, include.lowest = TRUE), mean)> # Create a bar plot> barplot(average_tips, names.arg = levels(cut(data$speed, breaks = speed_intervals, include.lowest = TRUE)),+         main = "Average Tips for Speed Intervals", xlab = "Speed Intervals", ylab = "Average Tips")> cat("CASH VS CREDIT HYPOTHESIS TESTING")CASH VS CREDIT HYPOTHESIS TESTING> cash_tips <- data$tips[data$payment_type == "Cash"]> credit_tips <- data$tips[data$payment_type == "Credit"]> hist(cash_tips, main="Histogram of Cash Tips", xlab="Tips", breaks=50)> hist(credit_tips, main="Histogram of Credit Tips", xlab="Tips", breaks=50)> qqnorm(cash_tips); qqline(cash_tips)> qqnorm(credit_tips); qqline(credit_tips)> t_test_result <- t.test(cash_tips, credit_tips, var.equal = FALSE)> t_test_result$p.value[1] 0> cat("Null Hypothesis: Cash and Credit tips are the same.")Null Hypothesis: Cash and Credit tips are the same.> cat("Alt. Hypothesis: Cash and Credit tips are different")Alt. Hypothesis: Cash and Credit tips are different> confidence_level = 0.01> if (t_test_result$p.value < confidence_level/2) {+   cat("Reject the null hypothesis: There is significant evidence of a difference.\n")+ } else {+   cat("Fail to reject the null hypothesis: There is not enough evidence of a difference.\n")+ }Reject the null hypothesis: There is significant evidence of a difference.> cat("WEEKEND VS WEEKDAY HYPOTHESIS TESTING")WEEKEND VS WEEKDAY HYPOTHESIS TESTING> weekend_tips <- credit_data$tips[credit_data$daytype == "weekday"]> weekday_tips <- credit_data$tips[credit_data$daytype == "weekend"]> hist(weekend_tips, main="Histogram of Weekend Tips", xlab="Tips", breaks=50)> hist(weekday_tips, main="Histogram of Weekday Tips", xlab="Tips", breaks=50)> qqnorm(weekend_tips); qqline(weekend_tips)> qqnorm(weekday_tips); qqline(weekday_tips)> t_test_result <- t.test(weekend_tips, weekday_tips, var.equal = FALSE)> cat("P-Value = ", t_test_result$p.value)P-Value =  0.0003448847> cat("Null Hypothesis: Weekend and Weekday tips are the same.")Null Hypothesis: Weekend and Weekday tips are the same.> cat("Alt. Hypothesis: Weekend and Weekday tips are different")Alt. Hypothesis: Weekend and Weekday tips are different> confidence_level = 0.01> if (t_test_result$p.value < confidence_level/2) {+   cat("Reject the null hypothesis: There is significant evidence of a difference.\n")+ } else {+   cat("Fail to reject the null hypothesis: There is not enough evidence of a difference.\n")+ }Reject the null hypothesis: There is significant evidence of a difference.> summary(weekend_tips)   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.   0.000   2.000   2.550   3.955   5.000  58.100 > summary(weekday_tips)   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.   0.000   2.000   2.250   3.631   4.000  26.350 > cat("CASH VS CREDIT ANOVA")CASH VS CREDIT ANOVA> model <- aov(tips ~ payment_type, data = data)> summary(model)                Df Sum Sq Mean Sq F value Pr(>F)    payment_type     1  48861   48861    7994 <2e-16 ***Residuals    13080  79945       6                   ---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1> cat("TIP % ANALYSIS")TIP % ANALYSIS> credit_data$fare <- credit_data$total - credit_data$tips> credit_data$percent <- credit_data$tips / credit_data$fare> credit_data$percent <- credit_data$percent * 100> filtered_credit_data <- credit_data[credit_data$percent < 100, ]> # Create a histogram with automatically determined breaks> hist(filtered_credit_data$percent, breaks = seq(0, 100, by = 5), main = "Histogram of filtered_credit_data$percent", xlab = "Percentage", ylab = "Frequency")> cat("MONTE CARLO SIMULATION")MONTE CARLO SIMULATION> # Build the parametric function from independent variables to tips> mc_linear_model <- lm(tips ~ speed + seconds + miles, data=credit_data)> # Generate random input data> num_credit_data <- credit_data[, c('speed', 'seconds')]> means <- colMeans(num_credit_data, na.rm=TRUE)> stdevs <- apply(num_credit_data, 2, sd, na.rm=TRUE)> num_simulations <- 1000> r_inputs <- matrix(+   abs(rnorm(length(means)*num_simulations, mean = rep(means, each = num_simulations), sd = rep(stdevs, each = num_simulations))), ncol=length(means)+ )> r_inputs_df <- as.data.frame(r_inputs)> colnames(r_inputs_df) <- colnames(num_credit_data)> r_inputs_df$miles <- (r_inputs_df$seconds * r_inputs_df$speed) / 3600> mc_predictions <- predict(mc_linear_model, newdata = r_inputs_df)> hist(mc_predictions)> credit_data_hist <- credit_data[credit_data$tips < 20, ]> monte_carlo_tips <- mc_predictions> hist(monte_carlo_tips, xlim=c(0,20), breaks = c(0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20))> hist(credit_data_hist$tips, xlim=c(0,20), breaks = c(0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20))> cat("BAYES THEOREM ANALYSIS")BAYES THEOREM ANALYSIS> library(dplyr)> chicago_taxi$total <- round(chicago_taxi$total, 0)Error: object 'chicago_taxi' not found> chicago_taxi$tips <- round(chicago_taxi$tips, 0)Error: object 'chicago_taxi' not found> tips_threshold <- 5> prior_total_high <- sum(chicago_taxi$total > 50) / nrow(chicago_taxi)Error: object 'chicago_taxi' not found> library(dplyr)> data$total <- round(data$total, 0)> data$tips <- round(data$tips, 0)> tips_threshold <- 5> prior_total_high <- sum(data$total > 50) / nrow(data)> prior_total_low <- 1 - prior_total_high> prior_tips_low <- sum(data$tips <= tips_threshold) / nrow(data)> prior_tips_high <- 1 - prior_tips_low> print(prior_total_high)[1] 0.09646843> likelihood_tips_high_given_total_high <- sum(data$tips > tips_threshold & data$total > 50) / sum(data$total > 50)> print(likelihood_tips_high_given_total_high)[1] 0.7717908> likelihood_tips_high_given_total_low <- sum(data$tips > tips_threshold & data$total <= 50) / sum(data$total <= 50)> print(likelihood_tips_high_given_total_low)[1] 0.03993232